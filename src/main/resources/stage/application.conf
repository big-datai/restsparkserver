
application {
  # Spark master
  spark {
    master = "spark://sm:7077"
    master = ${?application.spark.master}
  },

  cassandra {
    host = "172.31.31.250"
    host = ${?application.cassandra.host},
    username = "cassandra"
    username = ${?application.cassandra.username},
    password = ""
    password = ${?application.cassandra.password},
  },

  analytics-tables {
    profiles = "profiles3",
    events = "events4"
  },

  standalone-http {
    host = "0.0.0.0"
    host = ${?application.standalone-http.host},
    port = 9090
    port = ${?application.standalone-http.port},
  },

  ################################################
  # Reactive Streams: AMQP Reference Config File #
  ################################################

  # This is the reference config file that contains all the default settings.
  # Make your edits/overrides in your application.conf.

  # This are sane defaults if you want to connect to the RabbitMQ broker
  # that is running on localhost.
  amqp {
    host = "localhost"
    host = ${?application.amqp.host},

    port = ${?application.amqp.port}
    # An sequence of known broker addresses (hostname/port pairs)
    # to try in order. A random one will be picked during recovery.
    addresses = [
      {
        host = "localhost"
        host = ${?application.amqp.host},
        port = ${?application.amqp.port}
      }
    ],

    # Virtual host to use when connecting to the broker.
    virtual-host = "/"
    virtual-host = ${?application.amqp.virtual-host},

    # User name to use when connecting to the broker.
    username = "guest"
    username = ${?application.amqp.username},

    # Password to use when connecting to the broker.
    password = "guest"
    password = ${?application.amqp.password},

    # Requested heartbeat interval.
    # - setting it to "disable" will disable heartbeat
    # - setting multiple of 1 second will enable heartbeat
    heartbeat = disable
    heartbeat = ${?application.amqp.heartbeat},

    # The default connection timeout.
    # - setting it to "infinite" will result in waiting without limit
    # - setting it to multiple of 1 millisecond will set the timeout
    timeout = infinite
    timeout = ${?application.amqp.timeout},


    # Enable automatic recovery
    automatic-recovery = false
    automatic-recovery = ${?application.amqp.automatic-recovery},

    # How long will automatic recovery wait before attempting to reconnect.
    recovery-interval = 5s
    recovery-interval = ${?application.amqp.recovery-interval},

    # Use SSL when connecting to the broker.
    # - setting it to "disable" will disable SSL
    # - passing in the SSL protocol to use e.g. "TLSv1" or "TLSv1.2" will enable SSL
    ssl = disable
    ssl = ${?application.amqp.ssl},

    queueNameOut = myntelligence.content_scraping
    queueNameOut = ${?application.amqp.queueName},

    queueNameIn = myntelligence.urls
    queueNameIn = ${?application.amqp.queue.urls},

    queueNameError = myntelligence.broken_urls
    queueNameError = ${?application.amqp.broken.urls}
  }
}


